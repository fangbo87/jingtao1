<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!--maven坐标都是唯一的 jar包文件 -->
	<groupId>com.jt.1910</groupId>
	<artifactId>springboot_1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springboot_1</name>
	<description>Demo project for Spring Boot</description>

	<!--导入公共的jar包文件 spring springmvc 并且定义2.2.4的相关联的jar包版本 防止jar包冲突. -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<!--springBoot环境变量配置信息 -->
	<properties>
		<java.version>1.8</java.version>
		<!--指定maven插件版本 -->
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<!--项目的依赖项 -->
	<dependencies>
		<!--SpringMVC 传统方法需要手动的配置 springboot程序自动化部署. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<!--springboot的启动器包 -->
			<!--maven中的jar包具有依赖的传递性 -->
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--springboot启动项 加载test测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--添加属性注入依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!--引入插件lombok 自动的set/get/构造方法插件 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		
		<!--开箱即用  -->
		<!--支持热部署 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
	</dependencies>

	<!--build标签主要作用添加插件/配置 -->
	<build>
		<plugins>
			<!--指定maven插件 负责构建maven项目 打包/部署/测试/文档生成 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
